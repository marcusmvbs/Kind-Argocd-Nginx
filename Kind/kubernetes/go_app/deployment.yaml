apiVersion: apps/v1
kind: Deployment
metadata:
  name: mygoapptest
  namespace: webserver
  labels:
    monitoring: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goapptest
  template:
    metadata:
      labels:
        app: goapptest
    spec:
      containers:
        - name: goapptest
          image: golang:alpine3.19 # https://hub.docker.com/_/golang/tags - image: golang:1.22.1-alpine3.19
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 81
            - name: http-metrics
              containerPort: 8181
          resources:
            requests:
              memory: 256Mi
              cpu: 300m
            limits:
              memory: 512Mi
              cpu: 500m
          volumeMounts:
            - name: config-volume
              mountPath: /app_config
            - name: script-volume
              mountPath: /app_config/script
          # command: ["sh", "-c", "cp /app_config/script/app_config.sh /tmp/app_config.sh && cp -r /app_config/ /tmp/ && /tmp/app_config.sh"] # debug ["sh", "-c", "tail -f /dev/null"]
          command:
            - "/bin/sh"
            - "-c"
            - |
              cp /app_config/script/app_config.sh /tmp/app_config.sh &&
              cp -r /app_config/ /tmp/app_config &&
              chmod +x /tmp/app_config.sh &&
              sh /tmp/app_config.sh || echo "Failed to execute app_config.sh"

      # Define ConfigMaps for configuration files
      volumes:
        - name: config-volume
          configMap:
            name: go-app
        - name: script-volume
          configMap:
            name: go-script

      # # Add Init Container to copy configuration files
      # initContainers:
      # - name: copy-config-files
      #   image: golang:1.22
      #   volumeMounts:
      #   - name: config-volume
      #     mountPath: /go_app